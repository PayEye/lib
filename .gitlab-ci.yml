stages:
  - tag
  - publish_package

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE != "merge_request_event"

default:
  tags: [ docker-front-1 ]

variables:
  REGION: eu-central-1
  DOCKER_TLS_CERTDIR: ''
  DOCKER_DRIVER: overlay2
  REPO_URL_PREFIX: 306124787333.dkr.ecr.${REGION}.amazonaws.com/payeye
  BUILDER_IMAGE_REPO: ubuntu
  BUILDER_IMAGE_TAG: "20.04"
  BUILDER_IMAGE: "${REPO_URL_PREFIX}/${BUILDER_IMAGE_REPO}:${BUILDER_IMAGE_TAG}"
  GIT_STRATEGY: clone
  SECURE_FILES_DOWNLOAD_PATH: .secure_files

before_script:
  - apt update
  - apt install -y curl git
  - export tag=$(cat composer.json | grep version | grep -Eo "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+")

tag:
  stage: tag
  image: ${BUILDER_IMAGE}
  script:
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git tag "$tag"
    - |
       if [[ -n $GTILAB_DEPLOY_KEY ]] && [[ -f /.dockerenv ]]; then
        mkdir -p ~/.ssh && chmod 700 ~/.ssh
        echo "$GITLAB_SSH_KNOWN_HOST" > ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

        # Run ssh-agent (inside the build environment)
        command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )
        eval $(ssh-agent -s)
        ~/bin/download-secure-files || curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash
        if [[ -n $GTILAB_DEPLOY_KEY_PASSPHRASE ]]; then
          echo "$GTILAB_DEPLOY_KEY_PASSPHRASE" | openssl rsa -in $SECURE_FILES_DOWNLOAD_PATH/$GTILAB_DEPLOY_KEY -passin stdin | ssh-add -
        else
          ssh-add $SECURE_FILES_DOWNLOAD_PATH/$GTILAB_DEPLOY_KEY
        fi
       fi
    - git push --tags "git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git"

  rules:
    - when: manual

publish-tag:
  stage: publish_package
  image: ${BUILDER_IMAGE}
  needs:
    - tag
  script:
    - 'curl --header "Job-Token: $CI_JOB_TOKEN" --data tag=${tag} "${CI_API_V4_URL}/projects/$CI_PROJECT_ID/packages/composer"'
  environment: production
